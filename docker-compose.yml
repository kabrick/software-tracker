version: '3.8'

networks:
  laravel:

services:
  nginx:
    build:
      context: .
      dockerfile: nginx.dockerfile
    container_name: ${APP_SHORT_NAME}_nginx
    restart: unless-stopped
    ports:
      - "${PORT_SERVER}:80"
    volumes:
      - ./:/var/www/html
    depends_on:
      - mysql
      - php
    networks:
      - laravel

  mysql:
    image: mysql:8.0
    container_name: ${APP_SHORT_NAME}_mysql
    restart: unless-stopped
    ports:
      - "${PORT_DATABASE}:3306"
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
    volumes:
      - ./docker-compose/mysql:/var/lib/mysql
    networks:
      - laravel

  php:
    build:
      context: .
      dockerfile: php.dockerfile
    container_name: ${APP_SHORT_NAME}_php
    restart: unless-stopped
    volumes:
      - ./:/var/www/html
    networks:
      - laravel

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: ${APP_SHORT_NAME}_phpmyadmin
    environment:
      PMA_HOST: mysql
    ports:
      - ${PORT_PHPMYADMIN}:80
    restart: unless-stopped
    depends_on:
      - mysql
    networks:
      - laravel
